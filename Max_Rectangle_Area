#include <bits/stdc++.h>
int check(vector<int>&v){
    int n=v.size();
    vector<int>pfx(n),sfx(n);
    stack<int>s1,s2;
    
    for(int i=0;i<n;i++){
        
        while(!s1.empty() && v[s1.top()]>=v[i])s1.pop();      
        if(s1.empty())pfx[i]=-1;
         else pfx[i]=s1.top();   
     
        s1.push(i);    
    }
    
    for(int i=n-1;i>=0;i--){
   
       while(!s2.empty() && v[s2.top()]>=v[i])s2.pop();      
        if(s2.empty())sfx[i]=n;
        else sfx[i]=s2.top();   
     
        s2.push(i);             
    }
    int ans=0;
    for(int i=0;i<n;i++){
        ans=max(ans,v[i]*(sfx[i]-pfx[i]-1));
    }
    return ans;   
    
}

int maximalAreaOfSubMatrixOfAll1(vector<vector<int>> &v, int n, int m){
	for(int i=1;i<n;i++){
        for(int j=0;j<m;j++){
            if(v[i][j]){
                v[i][j]=v[i-1][j]+1;
            }
        }
    }
    int ans=-1e9;
    for(int i=0;i<n;i++){
        ans=max(ans,check(v[i]));
    }
    return ans;
    
}
